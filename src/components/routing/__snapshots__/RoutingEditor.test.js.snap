// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RoutingEditor routing rule set should render routing rule set 1`] = `
<React.Fragment>
  <RoutingEditor__Title>
    Page Title
  </RoutingEditor__Title>
  <RoutingEditor__Padding>
    <TransitionGroup
      childFactory={[Function]}
      component="div"
    >
      <Transition__RoutingComponentTransition
        exit={false}
        key="routing-rule-set"
        timeout={200}
      >
        <div>
          <RoutingRuleSet
            destinations={
              Object {
                "questionPages": Array [
                  Object {
                    "__typename": "QuestionPage",
                    "id": "2",
                    "section": Object {
                      "id": "1",
                    },
                  },
                  Object {
                    "__typename": "QuestionPage",
                    "id": "3",
                    "section": Object {
                      "id": "1",
                    },
                  },
                ],
                "sections": Array [
                  Object {
                    "__typename": "Section",
                    "id": "2",
                  },
                  Object {
                    "__typename": "Section",
                    "id": "3",
                  },
                ],
              }
            }
            match={
              Object {
                "params": Object {
                  "pageId": "1",
                  "questionnaireId": "1",
                  "sectionId": "1",
                },
              }
            }
            onAddRoutingCondition={[Function]}
            onAddRoutingRule={[Function]}
            onDeleteRoutingCondition={[Function]}
            onDeleteRoutingRule={[Function]}
            onDeleteRoutingRuleSet={[Function]}
            onDeleteRule={[Function]}
            onElseChange={[Function]}
            onThenChange={[Function]}
            onUpdateRoutingCondition={[Function]}
            onUpdateRoutingConditionValue={[Function]}
            onUpdateRoutingRule={[Function]}
            onUpdateRoutingRuleSet={[Function]}
            pagesAvailableForRouting={
              Array [
                Object {
                  "id": "1",
                  "pages": Array [
                    Object {
                      "answers": Array [
                        Object {
                          "id": "1",
                          "type": "Number",
                        },
                      ],
                      "id": "1",
                    },
                  ],
                },
              ]
            }
            ruleSet={
              Object {
                "else": null,
                "id": "1",
                "questionPage": Object {
                  "answers": Array [
                    Object {
                      "id": "1",
                      "type": "Number",
                    },
                  ],
                  "id": "1",
                },
                "routingRules": Array [],
              }
            }
          />
        </div>
      </Transition__RoutingComponentTransition>
    </TransitionGroup>
  </RoutingEditor__Padding>
</React.Fragment>
`;

exports[`RoutingEditor routing rules should render routing rules 1`] = `
<React.Fragment>
  <RoutingEditor__Title>
    Page Title
  </RoutingEditor__Title>
  <RoutingEditor__Padding>
    <TransitionGroup
      childFactory={[Function]}
      component="div"
    >
      <Transition__RoutingComponentTransition
        exit={false}
        key="routing-rule-set"
        timeout={200}
      >
        <div>
          <RoutingRuleSet
            destinations={
              Object {
                "questionPages": Array [
                  Object {
                    "__typename": "QuestionPage",
                    "id": "2",
                    "section": Object {
                      "id": "1",
                    },
                  },
                  Object {
                    "__typename": "QuestionPage",
                    "id": "3",
                    "section": Object {
                      "id": "1",
                    },
                  },
                ],
                "sections": Array [
                  Object {
                    "__typename": "Section",
                    "id": "2",
                  },
                  Object {
                    "__typename": "Section",
                    "id": "3",
                  },
                ],
              }
            }
            match={
              Object {
                "params": Object {
                  "pageId": "1",
                  "questionnaireId": "1",
                  "sectionId": "1",
                },
              }
            }
            onAddRoutingCondition={[Function]}
            onAddRoutingRule={[Function]}
            onDeleteRoutingCondition={[Function]}
            onDeleteRoutingRule={[Function]}
            onDeleteRoutingRuleSet={[Function]}
            onDeleteRule={[Function]}
            onElseChange={[Function]}
            onThenChange={[Function]}
            onUpdateRoutingCondition={[Function]}
            onUpdateRoutingConditionValue={[Function]}
            onUpdateRoutingRule={[Function]}
            onUpdateRoutingRuleSet={[Function]}
            pagesAvailableForRouting={
              Array [
                Object {
                  "id": "1",
                  "pages": Array [
                    Object {
                      "answers": Array [
                        Object {
                          "id": "1",
                          "type": "Number",
                        },
                      ],
                      "id": "1",
                    },
                  ],
                },
              ]
            }
            ruleSet={
              Object {
                "id": "2",
                "routingRules": Array [
                  Object {
                    "conditions": Array [],
                    "goto": null,
                    "id": "1",
                    "operation": "And",
                  },
                ],
              }
            }
          />
        </div>
      </Transition__RoutingComponentTransition>
    </TransitionGroup>
  </RoutingEditor__Padding>
</React.Fragment>
`;

exports[`RoutingEditor when not routing rule set should render when no routing rule set 1`] = `
<React.Fragment>
  <RoutingEditor__Title>
    Page Title
  </RoutingEditor__Title>
  <RoutingEditor__Padding>
    <TransitionGroup
      childFactory={[Function]}
      component="div"
    >
      <Transition__RoutingComponentTransition
        exit={false}
        key="routing-rule-set-empty"
        timeout={200}
      >
        <div>
          <RoutingRuleSetEmptyMsg
            onAddRuleSet={[Function]}
            title="No routing rules exist for this question"
          />
        </div>
      </Transition__RoutingComponentTransition>
    </TransitionGroup>
  </RoutingEditor__Padding>
</React.Fragment>
`;
