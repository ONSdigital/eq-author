// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/Grid Columns should render a column with an offset 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  height: 100%;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.c1 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding: 0 0.5em;
  max-width: 16.666666666666664%;
  margin-left: 16.666666666666664%;
}

.c1:first-child {
  padding-left: 0;
}

.c1:last-child:not(:only-child) {
  padding-right: 0;
}

.c2 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding: 0 0.5em;
  max-width: 66.66666666666666%;
  margin-left: 0;
}

.c2:first-child {
  padding-left: 0;
}

.c2:last-child:not(:only-child) {
  padding-right: 0;
}

<Grid
  align="top"
  fillHeight={true}
>
  <div
    className="c0"
  >
    <Column
      cols={2}
      offset={2}
    >
      <div
        className="c1"
        cols={2}
        offset={2}
      >
        Column 1
      </div>
    </Column>
    <Column
      cols={8}
    >
      <div
        className="c2"
        cols={8}
      >
        Column 2
      </div>
    </Column>
  </div>
</Grid>
`;

exports[`components/Grid Columns should render a gutterless grid 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  height: 100%;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.c1 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding: 0;
  max-width: 100%;
  margin-left: 0;
}

.c1:first-child {
  padding-left: 0;
}

.c1:last-child:not(:only-child) {
  padding-right: 0;
}

<Grid
  align="top"
  fillHeight={true}
>
  <div
    className="c0"
  >
    <Column
      cols={12}
      gutters={false}
    >
      <div
        className="c1"
        cols={12}
      >
        Column 1
      </div>
    </Column>
    <Column
      cols={12}
      gutters={false}
    >
      <div
        className="c1"
        cols={12}
      >
        Column 2
      </div>
    </Column>
  </div>
</Grid>
`;

exports[`components/Grid Columns should render an asymmetrical two column grid  1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  height: 100%;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.c1 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding: 0 0.5em;
  max-width: 100%;
  margin-left: 0;
}

.c1:first-child {
  padding-left: 0;
}

.c1:last-child:not(:only-child) {
  padding-right: 0;
}

.c2 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding: 0 0.5em;
  max-width: 33.33333333333333%;
  margin-left: 0;
}

.c2:first-child {
  padding-left: 0;
}

.c2:last-child:not(:only-child) {
  padding-right: 0;
}

<Grid
  align="top"
  fillHeight={true}
>
  <div
    className="c0"
  >
    <Column
      cols={12}
    >
      <div
        className="c1"
        cols={12}
      >
        Column 1
      </div>
    </Column>
    <Column
      cols={4}
    >
      <div
        className="c2"
        cols={4}
      >
        Column 2
      </div>
    </Column>
  </div>
</Grid>
`;

exports[`components/Grid should be optionally aligned bottom 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  height: 100%;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
}

.c1 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding: 0 0.5em;
  max-width: 100%;
  margin-left: 0;
}

.c1:first-child {
  padding-left: 0;
}

.c1:last-child:not(:only-child) {
  padding-right: 0;
}

<Grid
  align="bottom"
  fillHeight={true}
>
  <div
    className="c0"
  >
    <Column
      cols={12}
    >
      <div
        className="c1"
        cols={12}
      >
        Column 1
      </div>
    </Column>
    <Column
      cols={12}
    >
      <div
        className="c1"
        cols={12}
      >
        Column 2
      </div>
    </Column>
  </div>
</Grid>
`;

exports[`components/Grid should be optionally aligned center 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  height: 100%;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c1 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding: 0 0.5em;
  max-width: 100%;
  margin-left: 0;
}

.c1:first-child {
  padding-left: 0;
}

.c1:last-child:not(:only-child) {
  padding-right: 0;
}

<Grid
  align="center"
  fillHeight={true}
>
  <div
    className="c0"
  >
    <Column
      cols={12}
    >
      <div
        className="c1"
        cols={12}
      >
        Column 1
      </div>
    </Column>
    <Column
      cols={12}
    >
      <div
        className="c1"
        cols={12}
      >
        Column 2
      </div>
    </Column>
  </div>
</Grid>
`;

exports[`components/Grid should not fill height of container, if specified 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  height: 100%;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.c1 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding: 0 0.5em;
  max-width: 100%;
  margin-left: 0;
}

.c1:first-child {
  padding-left: 0;
}

.c1:last-child:not(:only-child) {
  padding-right: 0;
}

<Grid
  align="top"
  fillHeight={false}
>
  <div
    className="c0"
  >
    <Column
      cols={12}
    >
      <div
        className="c1"
        cols={12}
      >
        Column 1
      </div>
    </Column>
    <Column
      cols={12}
    >
      <div
        className="c1"
        cols={12}
      >
        Column 2
      </div>
    </Column>
  </div>
</Grid>
`;

exports[`components/Grid should render a basic two column grid 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  height: 100%;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.c1 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding: 0 0.5em;
  max-width: 100%;
  margin-left: 0;
}

.c1:first-child {
  padding-left: 0;
}

.c1:last-child:not(:only-child) {
  padding-right: 0;
}

<Grid
  align="top"
  fillHeight={true}
>
  <div
    className="c0"
  >
    <Column
      cols={12}
    >
      <div
        className="c1"
        cols={12}
      >
        Column 1
      </div>
    </Column>
    <Column
      cols={12}
    >
      <div
        className="c1"
        cols={12}
      >
        Column 2
      </div>
    </Column>
  </div>
</Grid>
`;
