// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ToggleSwitch should render 1`] = `
<ToggleSwitch__FlexInline
  aria-checked={false}
  height={1.15}
  role="switch"
  width={1.7}
>
  <ToggleSwitch__HiddenInput
    checked={false}
    id="test"
    onChange={[Function]}
    type="checkbox"
  />
  <ToggleSwitch__ToggleSwitchBackground
    checked={false}
    height={1.15}
    onClick={[Function]}
    role="presentation"
    width={1.7}
  >
    <ToggleSwitch__ToggleSwitchKnob
      checked={false}
      height={1.15}
      size={0.9}
      width={1.7}
    />
  </ToggleSwitch__ToggleSwitchBackground>
</ToggleSwitch__FlexInline>
`;

exports[`ToggleSwitch should render a large toggle button 1`] = `
<ToggleSwitch__FlexInline
  aria-checked={false}
  height={1.15}
  role="switch"
  width={5}
>
  <ToggleSwitch__HiddenInput
    checked={false}
    id="toggle-3"
    onChange={[Function]}
    type="checkbox"
  />
  <ToggleSwitch__ToggleSwitchBackground
    checked={false}
    height={2}
    onClick={[Function]}
    role="presentation"
    width={5}
  >
    <ToggleSwitch__ToggleSwitchKnob
      checked={false}
      height={2}
      size={2}
      width={5}
    />
  </ToggleSwitch__ToggleSwitchBackground>
</ToggleSwitch__FlexInline>
`;

exports[`ToggleSwitch should render a large toggle button when mounted 1`] = `
.c3 {
  font-size: 1em;
  border: 1px solid #999999;
  padding: 0.5em;
  color: #333333;
  display: block;
  width: 100%;
  -webkit-transition: outline-color 100ms ease-in,border-color 100ms ease-in;
  transition: outline-color 100ms ease-in,border-color 100ms ease-in;
  outline: 1px solid transparent;
  display: inline-block;
  width: 1.1em;
  height: 1.1em;
  padding: 0;
  margin: 0 1em 0 0;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  font-size: 1em;
}

.c3:hover {
  border-color: #3B7A9E;
  outline-color: #3B7A9E;
}

.c3:focus,
.c3:focus-within {
  border-color: #3B7A9E;
  outline-color: #3B7A9E;
  box-shadow: 0 0 0 3px #FDBD56;
}

.c3::-webkit-input-placeholder {
  color: #a3a3a3;
}

.c3::-moz-placeholder {
  color: #a3a3a3;
}

.c3:-ms-input-placeholder {
  color: #a3a3a3;
}

.c3::placeholder {
  color: #a3a3a3;
}

.c3:focus {
  outline: none;
  border: 1px solid #3B7A9E;
}

.c3[disabled] {
  opacity: 0.8;
  pointer-events: none;
}

.c3:checked {
  background: url(icon-checkbox.svg) no-repeat center;
  background-size: 0.8em auto;
}

.c2 {
  opacity: 0;
  position: absolute;
}

.c2:focus {
  border: none;
}

.c5 {
  cursor: pointer;
  height: 2em;
  width: 5em;
  background: #FFFFFF;
  border-radius: 1em;
  content: "";
  -webkit-transition: background 100ms ease-in-out;
  transition: background 100ms ease-in-out;
  position: relative;
  border: 0.1em solid #999999;
}

.c1:focus + .c4 .JGIEx::before {
  opacity: 0.12;
}

.c6 {
  display: inline-block;
  height: 2.1em;
  width: 2.1em;
  background: #FFFFFF;
  content: "";
  position: relative;
  top: -0.025em;
  right: 0.05em;
  will-change: transform;
  -webkit-transform: translateX( 0em );
  -ms-transform: translateX( 0em );
  transform: translateX( 0em );
  border-radius: 50%;
  -webkit-transition: -webkit-transform 100ms ease-in-out;
  -webkit-transition: transform 100ms ease-in-out;
  transition: transform 100ms ease-in-out;
  box-shadow: 0 0 1px 0 rgba(0,0,0,0.12),0 1px 1px 0 rgba(0,0,0,0.24);
  border: 1px solid #999999;
}

.c6::before {
  background: #FFFFFF;
  display: inline-block;
  content: "";
  width: 2.8em;
  height: 2.8em;
  position: relative;
  top: -0.3999999999999999em;
  will-change: transform;
  -webkit-transform: translateX( -0.3999999999999999em );
  -ms-transform: translateX( -0.3999999999999999em );
  transform: translateX( -0.3999999999999999em );
  border-radius: 50%;
  opacity: 0;
  -webkit-transition: opacity 100ms ease-in-out;
  transition: opacity 100ms ease-in-out;
}

.c1:focus + .c4 .c6::before {
  opacity: 0.12;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 5em;
  position: relative;
}

<ToggleSwitch
  checked={false}
  height={2}
  id="toggle-3"
  label="Test switch"
  name="test"
  onChange={[Function]}
  size={2}
  width={5}
>
  <ToggleSwitch__FlexInline
    aria-checked={false}
    height={1.15}
    role="switch"
    width={5}
  >
    <div
      aria-checked={false}
      className="c0"
      height={1.15}
      role="switch"
      width={5}
    >
      <ToggleSwitch__HiddenInput
        checked={false}
        id="toggle-3"
        onChange={[Function]}
        type="checkbox"
      >
        <withChangeHandler(Input)
          checked={false}
          className="c1 c2"
          id="toggle-3"
          onChange={[Function]}
          type="checkbox"
        >
          <Input
            checked={false}
            className="c1 c2"
            id="toggle-3"
            onChange={[Function]}
            type="checkbox"
          >
            <Input__StyledInput
              checked={false}
              className="c1 c2"
              id="toggle-3"
              name="toggle-3"
              onChange={[Function]}
              type="checkbox"
            >
              <input
                checked={false}
                className="c1 c2 c3"
                id="toggle-3"
                name="toggle-3"
                onChange={[Function]}
                type="checkbox"
              />
            </Input__StyledInput>
          </Input>
        </withChangeHandler(Input)>
      </ToggleSwitch__HiddenInput>
      <ToggleSwitch__ToggleSwitchBackground
        checked={false}
        height={2}
        onClick={[Function]}
        role="presentation"
        width={5}
      >
        <div
          checked={false}
          className="c4 c5"
          height={2}
          onClick={[Function]}
          role="presentation"
          width={5}
        >
          <ToggleSwitch__ToggleSwitchKnob
            checked={false}
            height={2}
            size={2}
            width={5}
          >
            <div
              checked={false}
              className="c6"
              height={2}
              size={2}
              width={5}
            />
          </ToggleSwitch__ToggleSwitchKnob>
        </div>
      </ToggleSwitch__ToggleSwitchBackground>
    </div>
  </ToggleSwitch__FlexInline>
</ToggleSwitch>
`;

exports[`ToggleSwitch should render checked 1`] = `
<ToggleSwitch__FlexInline
  aria-checked={true}
  height={1.15}
  role="switch"
  width={1.7}
>
  <ToggleSwitch__HiddenInput
    checked={true}
    id="toggle-2"
    onChange={[Function]}
    type="checkbox"
  />
  <ToggleSwitch__ToggleSwitchBackground
    checked={true}
    height={1.15}
    onClick={[Function]}
    role="presentation"
    width={1.7}
  >
    <ToggleSwitch__ToggleSwitchKnob
      checked={true}
      height={1.15}
      size={0.9}
      width={1.7}
    />
  </ToggleSwitch__ToggleSwitchBackground>
</ToggleSwitch__FlexInline>
`;

exports[`ToggleSwitch should render when checked and mounted 1`] = `
.c3 {
  font-size: 1em;
  border: 1px solid #999999;
  padding: 0.5em;
  color: #333333;
  display: block;
  width: 100%;
  -webkit-transition: outline-color 100ms ease-in,border-color 100ms ease-in;
  transition: outline-color 100ms ease-in,border-color 100ms ease-in;
  outline: 1px solid transparent;
  display: inline-block;
  width: 1.1em;
  height: 1.1em;
  padding: 0;
  margin: 0 1em 0 0;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  font-size: 1em;
}

.c3:hover {
  border-color: #3B7A9E;
  outline-color: #3B7A9E;
}

.c3:focus,
.c3:focus-within {
  border-color: #3B7A9E;
  outline-color: #3B7A9E;
  box-shadow: 0 0 0 3px #FDBD56;
}

.c3::-webkit-input-placeholder {
  color: #a3a3a3;
}

.c3::-moz-placeholder {
  color: #a3a3a3;
}

.c3:-ms-input-placeholder {
  color: #a3a3a3;
}

.c3::placeholder {
  color: #a3a3a3;
}

.c3:focus {
  outline: none;
  border: 1px solid #3B7A9E;
}

.c3[disabled] {
  opacity: 0.8;
  pointer-events: none;
}

.c3:checked {
  background: url(icon-checkbox.svg) no-repeat center;
  background-size: 0.8em auto;
}

.c2 {
  opacity: 0;
  position: absolute;
}

.c2:focus {
  border: none;
}

.c5 {
  cursor: pointer;
  height: 1.15em;
  width: 1.7em;
  background: #3B7A9E;
  border-radius: 1em;
  content: "";
  -webkit-transition: background 100ms ease-in-out;
  transition: background 100ms ease-in-out;
  position: relative;
  border: none;
}

.c6 {
  display: inline-block;
  height: 0.8em;
  width: 0.8em;
  background: #FFFFFF;
  content: "";
  position: relative;
  top: 0.15em;
  right: 0.05em;
  will-change: transform;
  -webkit-transform: translateX( 0.7999999999999999em );
  -ms-transform: translateX( 0.7999999999999999em );
  transform: translateX( 0.7999999999999999em );
  border-radius: 50%;
  -webkit-transition: -webkit-transform 100ms ease-in-out;
  -webkit-transition: transform 100ms ease-in-out;
  transition: transform 100ms ease-in-out;
  box-shadow: 0 0 1px 0 rgba(0,0,0,0.12),0 1px 1px 0 rgba(0,0,0,0.24);
  border: none;
}

.c6::before {
  background: #FFFFFF;
  display: inline-block;
  content: "";
  width: 1.26em;
  height: 1.26em;
  position: relative;
  top: -0.18em;
  will-change: transform;
  -webkit-transform: translateX( -0.18em );
  -ms-transform: translateX( -0.18em );
  transform: translateX( -0.18em );
  border-radius: 50%;
  opacity: 0;
  -webkit-transition: opacity 100ms ease-in-out;
  transition: opacity 100ms ease-in-out;
}

.c1:focus + .c4 .c6::before {
  opacity: 0.12;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1.7em;
  position: relative;
}

<ToggleSwitch
  checked={true}
  id="toggle-2"
  label="Test switch"
  name="test"
  onChange={[Function]}
>
  <ToggleSwitch__FlexInline
    aria-checked={true}
    height={1.15}
    role="switch"
    width={1.7}
  >
    <div
      aria-checked={true}
      className="c0"
      height={1.15}
      role="switch"
      width={1.7}
    >
      <ToggleSwitch__HiddenInput
        checked={true}
        id="toggle-2"
        onChange={[Function]}
        type="checkbox"
      >
        <withChangeHandler(Input)
          checked={true}
          className="c1 c2"
          id="toggle-2"
          onChange={[Function]}
          type="checkbox"
        >
          <Input
            checked={true}
            className="c1 c2"
            id="toggle-2"
            onChange={[Function]}
            type="checkbox"
          >
            <Input__StyledInput
              checked={true}
              className="c1 c2"
              id="toggle-2"
              name="toggle-2"
              onChange={[Function]}
              type="checkbox"
            >
              <input
                checked={true}
                className="c1 c2 c3"
                id="toggle-2"
                name="toggle-2"
                onChange={[Function]}
                type="checkbox"
              />
            </Input__StyledInput>
          </Input>
        </withChangeHandler(Input)>
      </ToggleSwitch__HiddenInput>
      <ToggleSwitch__ToggleSwitchBackground
        checked={true}
        height={1.15}
        onClick={[Function]}
        role="presentation"
        width={1.7}
      >
        <div
          checked={true}
          className="c4 c5"
          height={1.15}
          onClick={[Function]}
          role="presentation"
          width={1.7}
        >
          <ToggleSwitch__ToggleSwitchKnob
            checked={true}
            height={1.15}
            size={0.9}
            width={1.7}
          >
            <div
              checked={true}
              className="c6"
              height={1.15}
              size={0.9}
              width={1.7}
            />
          </ToggleSwitch__ToggleSwitchKnob>
        </div>
      </ToggleSwitch__ToggleSwitchBackground>
    </div>
  </ToggleSwitch__FlexInline>
</ToggleSwitch>
`;

exports[`ToggleSwitch should render when mounted 1`] = `
.c3 {
  font-size: 1em;
  border: 1px solid #999999;
  padding: 0.5em;
  color: #333333;
  display: block;
  width: 100%;
  -webkit-transition: outline-color 100ms ease-in,border-color 100ms ease-in;
  transition: outline-color 100ms ease-in,border-color 100ms ease-in;
  outline: 1px solid transparent;
  display: inline-block;
  width: 1.1em;
  height: 1.1em;
  padding: 0;
  margin: 0 1em 0 0;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  font-size: 1em;
}

.c3:hover {
  border-color: #3B7A9E;
  outline-color: #3B7A9E;
}

.c3:focus,
.c3:focus-within {
  border-color: #3B7A9E;
  outline-color: #3B7A9E;
  box-shadow: 0 0 0 3px #FDBD56;
}

.c3::-webkit-input-placeholder {
  color: #a3a3a3;
}

.c3::-moz-placeholder {
  color: #a3a3a3;
}

.c3:-ms-input-placeholder {
  color: #a3a3a3;
}

.c3::placeholder {
  color: #a3a3a3;
}

.c3:focus {
  outline: none;
  border: 1px solid #3B7A9E;
}

.c3[disabled] {
  opacity: 0.8;
  pointer-events: none;
}

.c3:checked {
  background: url(icon-checkbox.svg) no-repeat center;
  background-size: 0.8em auto;
}

.c2 {
  opacity: 0;
  position: absolute;
}

.c2:focus {
  border: none;
}

.c5 {
  cursor: pointer;
  height: 1.15em;
  width: 1.7em;
  background: #3B7A9E;
  border-radius: 1em;
  content: "";
  -webkit-transition: background 100ms ease-in-out;
  transition: background 100ms ease-in-out;
  position: relative;
  border: none;
}

.c6 {
  display: inline-block;
  height: 0.8em;
  width: 0.8em;
  background: #FFFFFF;
  content: "";
  position: relative;
  top: 0.15em;
  right: 0.05em;
  will-change: transform;
  -webkit-transform: translateX( 0.7999999999999999em );
  -ms-transform: translateX( 0.7999999999999999em );
  transform: translateX( 0.7999999999999999em );
  border-radius: 50%;
  -webkit-transition: -webkit-transform 100ms ease-in-out;
  -webkit-transition: transform 100ms ease-in-out;
  transition: transform 100ms ease-in-out;
  box-shadow: 0 0 1px 0 rgba(0,0,0,0.12),0 1px 1px 0 rgba(0,0,0,0.24);
  border: none;
}

.c6::before {
  background: #FFFFFF;
  display: inline-block;
  content: "";
  width: 1.26em;
  height: 1.26em;
  position: relative;
  top: -0.18em;
  will-change: transform;
  -webkit-transform: translateX( -0.18em );
  -ms-transform: translateX( -0.18em );
  transform: translateX( -0.18em );
  border-radius: 50%;
  opacity: 0;
  -webkit-transition: opacity 100ms ease-in-out;
  transition: opacity 100ms ease-in-out;
}

.c1:focus + .c4 .c6::before {
  opacity: 0.12;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 1.7em;
  position: relative;
}

<ToggleSwitch
  checked={true}
  id="toggle-2"
  label="Test switch"
  name="test"
  onChange={[Function]}
>
  <ToggleSwitch__FlexInline
    aria-checked={true}
    height={1.15}
    role="switch"
    width={1.7}
  >
    <div
      aria-checked={true}
      className="c0"
      height={1.15}
      role="switch"
      width={1.7}
    >
      <ToggleSwitch__HiddenInput
        checked={true}
        id="toggle-2"
        onChange={[Function]}
        type="checkbox"
      >
        <withChangeHandler(Input)
          checked={true}
          className="c1 c2"
          id="toggle-2"
          onChange={[Function]}
          type="checkbox"
        >
          <Input
            checked={true}
            className="c1 c2"
            id="toggle-2"
            onChange={[Function]}
            type="checkbox"
          >
            <Input__StyledInput
              checked={true}
              className="c1 c2"
              id="toggle-2"
              name="toggle-2"
              onChange={[Function]}
              type="checkbox"
            >
              <input
                checked={true}
                className="c1 c2 c3"
                id="toggle-2"
                name="toggle-2"
                onChange={[Function]}
                type="checkbox"
              />
            </Input__StyledInput>
          </Input>
        </withChangeHandler(Input)>
      </ToggleSwitch__HiddenInput>
      <ToggleSwitch__ToggleSwitchBackground
        checked={true}
        height={1.15}
        onClick={[Function]}
        role="presentation"
        width={1.7}
      >
        <div
          checked={true}
          className="c4 c5"
          height={1.15}
          onClick={[Function]}
          role="presentation"
          width={1.7}
        >
          <ToggleSwitch__ToggleSwitchKnob
            checked={true}
            height={1.15}
            size={0.9}
            width={1.7}
          >
            <div
              checked={true}
              className="c6"
              height={1.15}
              size={0.9}
              width={1.7}
            />
          </ToggleSwitch__ToggleSwitchKnob>
        </div>
      </ToggleSwitch__ToggleSwitchBackground>
    </div>
  </ToggleSwitch__FlexInline>
</ToggleSwitch>
`;
