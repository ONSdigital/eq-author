// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/RichTextEditor should allow multiline input 1`] = `
<RichTextEditor__Wrapper
  placeholderStyle="unstyled"
  size="small"
>
  <ToolBar
    controls={Object {}}
    editorState={
      EditorState {
        "_immutable": Object {
          "allowUndo": true,
          "currentContent": Object {
            "blockMap": Object {
              "123": Object {
                "characterList": Array [],
                "data": Object {},
                "depth": 0,
                "key": "123",
                "text": "",
                "type": "unstyled",
              },
            },
            "entityMap": Object {
              "__add": [Function],
              "__create": [Function],
              "__get": [Function],
              "__getLastCreatedEntityKey": [Function],
              "__mergeData": [Function],
              "__replaceData": [Function],
              "add": [Function],
              "create": [Function],
              "get": [Function],
              "getLastCreatedEntityKey": [Function],
              "mergeData": [Function],
              "replaceData": [Function],
            },
            "selectionAfter": Object {
              "anchorKey": "123",
              "anchorOffset": 0,
              "focusKey": "123",
              "focusOffset": 0,
              "hasFocus": false,
              "isBackward": false,
            },
            "selectionBefore": Object {
              "anchorKey": "123",
              "anchorOffset": 0,
              "focusKey": "123",
              "focusOffset": 0,
              "hasFocus": false,
              "isBackward": false,
            },
          },
          "decorator": null,
          "directionMap": Object {
            "123": "LTR",
          },
          "forceSelection": false,
          "inCompositionMode": false,
          "inlineStyleOverride": null,
          "lastChangeType": null,
          "nativelyRenderedContent": null,
          "redoStack": Array [],
          "selection": Object {
            "anchorKey": "123",
            "anchorOffset": 0,
            "focusKey": "123",
            "focusOffset": 0,
            "hasFocus": false,
            "isBackward": false,
          },
          "treeMap": Object {
            "123": Array [
              Object {
                "decoratorKey": null,
                "end": 0,
                "leaves": Array [
                  Object {
                    "end": 0,
                    "start": 0,
                  },
                ],
                "start": 0,
              },
            ],
          },
          "undoStack": Array [],
        },
      }
    }
    id="test"
    isActiveControl={[Function]}
    onBlur={[Function]}
    onFocus={[Function]}
    onToggle={[Function]}
    onUpdate={[Function]}
    visible={false}
  />
  <div
    id="rte-click-context"
    onClick={[Function]}
  >
    <DraftEditor
      ariaLabel="I am a label"
      blockRenderMap={
        Immutable.Map {
          ordered-list-item: Object {
            "element": "li",
            "wrapper": <ol
              className="public-DraftStyleDefault-ol"
          />,
          },
          header-six: Object {
            "element": "h6",
          },
          header-four: Object {
            "element": "h4",
          },
          header-one: Object {
            "element": "h1",
          },
          unordered-list-item: Object {
            "element": "li",
            "wrapper": <ul
              className="public-DraftStyleDefault-ul"
          />,
          },
          atomic: Object {
            "element": "figure",
          },
          unstyled: Object {
            "aliasedElements": Array [
              "p",
            ],
            "element": "div",
          },
          header-two: Object {
            "element": "h2",
          },
          code-block: Object {
            "element": "pre",
            "wrapper": <pre
              className="public-DraftStyleDefault-pre"
          />,
          },
          blockquote: Object {
            "element": "blockquote",
          },
          header-five: Object {
            "element": "h5",
          },
          header-three: Object {
            "element": "h3",
          },
        }
      }
      blockRendererFn={[Function]}
      blockStyleFn={[Function]}
      customStyleMap={
        Object {
          "ITALIC": Object {
            "backgroundColor": "#cbe2c8",
          },
        }
      }
      editorState={
        EditorState {
          "_immutable": Object {
            "allowUndo": true,
            "currentContent": Object {
              "blockMap": Object {
                "123": Object {
                  "characterList": Array [],
                  "data": Object {},
                  "depth": 0,
                  "key": "123",
                  "text": "",
                  "type": "unstyled",
                },
              },
              "entityMap": Object {
                "__add": [Function],
                "__create": [Function],
                "__get": [Function],
                "__getLastCreatedEntityKey": [Function],
                "__mergeData": [Function],
                "__replaceData": [Function],
                "add": [Function],
                "create": [Function],
                "get": [Function],
                "getLastCreatedEntityKey": [Function],
                "mergeData": [Function],
                "replaceData": [Function],
              },
              "selectionAfter": Object {
                "anchorKey": "123",
                "anchorOffset": 0,
                "focusKey": "123",
                "focusOffset": 0,
                "hasFocus": false,
                "isBackward": false,
              },
              "selectionBefore": Object {
                "anchorKey": "123",
                "anchorOffset": 0,
                "focusKey": "123",
                "focusOffset": 0,
                "hasFocus": false,
                "isBackward": false,
              },
            },
            "decorator": null,
            "directionMap": Object {
              "123": "LTR",
            },
            "forceSelection": false,
            "inCompositionMode": false,
            "inlineStyleOverride": null,
            "lastChangeType": null,
            "nativelyRenderedContent": null,
            "redoStack": Array [],
            "selection": Object {
              "anchorKey": "123",
              "anchorOffset": 0,
              "focusKey": "123",
              "focusOffset": 0,
              "hasFocus": false,
              "isBackward": false,
            },
            "treeMap": Object {
              "123": Array [
                Object {
                  "decoratorKey": null,
                  "end": 0,
                  "leaves": Array [
                    Object {
                      "end": 0,
                      "start": 0,
                    },
                  ],
                  "start": 0,
                },
              ],
            },
            "undoStack": Array [],
          },
        }
      }
      keyBindingFn={[Function]}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder=""
      readOnly={false}
      spellCheck={true}
      stripPastedStyles={false}
    />
  </div>
</RichTextEditor__Wrapper>
`;

exports[`components/RichTextEditor should render 1`] = `
<RichTextEditor__Wrapper
  placeholderStyle="unstyled"
  size="small"
>
  <ToolBar
    controls={Object {}}
    editorState={
      EditorState {
        "_immutable": Object {
          "allowUndo": true,
          "currentContent": Object {
            "blockMap": Object {
              "123": Object {
                "characterList": Array [],
                "data": Object {},
                "depth": 0,
                "key": "123",
                "text": "",
                "type": "unstyled",
              },
            },
            "entityMap": Object {
              "__add": [Function],
              "__create": [Function],
              "__get": [Function],
              "__getLastCreatedEntityKey": [Function],
              "__mergeData": [Function],
              "__replaceData": [Function],
              "add": [Function],
              "create": [Function],
              "get": [Function],
              "getLastCreatedEntityKey": [Function],
              "mergeData": [Function],
              "replaceData": [Function],
            },
            "selectionAfter": Object {
              "anchorKey": "123",
              "anchorOffset": 0,
              "focusKey": "123",
              "focusOffset": 0,
              "hasFocus": false,
              "isBackward": false,
            },
            "selectionBefore": Object {
              "anchorKey": "123",
              "anchorOffset": 0,
              "focusKey": "123",
              "focusOffset": 0,
              "hasFocus": false,
              "isBackward": false,
            },
          },
          "decorator": null,
          "directionMap": Object {
            "123": "LTR",
          },
          "forceSelection": false,
          "inCompositionMode": false,
          "inlineStyleOverride": null,
          "lastChangeType": null,
          "nativelyRenderedContent": null,
          "redoStack": Array [],
          "selection": Object {
            "anchorKey": "123",
            "anchorOffset": 0,
            "focusKey": "123",
            "focusOffset": 0,
            "hasFocus": false,
            "isBackward": false,
          },
          "treeMap": Object {
            "123": Array [
              Object {
                "decoratorKey": null,
                "end": 0,
                "leaves": Array [
                  Object {
                    "end": 0,
                    "start": 0,
                  },
                ],
                "start": 0,
              },
            ],
          },
          "undoStack": Array [],
        },
      }
    }
    id="test"
    isActiveControl={[Function]}
    onBlur={[Function]}
    onFocus={[Function]}
    onToggle={[Function]}
    onUpdate={[Function]}
    visible={false}
  />
  <div
    id="rte-click-context"
    onClick={[Function]}
  >
    <DraftEditor
      ariaLabel="I am a label"
      blockRenderMap={
        Immutable.Map {
          ordered-list-item: Object {
            "element": "li",
            "wrapper": <ol
              className="public-DraftStyleDefault-ol"
          />,
          },
          header-six: Object {
            "element": "h6",
          },
          header-four: Object {
            "element": "h4",
          },
          header-one: Object {
            "element": "h1",
          },
          unordered-list-item: Object {
            "element": "li",
            "wrapper": <ul
              className="public-DraftStyleDefault-ul"
          />,
          },
          atomic: Object {
            "element": "figure",
          },
          unstyled: Object {
            "aliasedElements": Array [
              "p",
            ],
            "element": "div",
          },
          header-two: Object {
            "element": "h2",
          },
          code-block: Object {
            "element": "pre",
            "wrapper": <pre
              className="public-DraftStyleDefault-pre"
          />,
          },
          blockquote: Object {
            "element": "blockquote",
          },
          header-five: Object {
            "element": "h5",
          },
          header-three: Object {
            "element": "h3",
          },
        }
      }
      blockRendererFn={[Function]}
      blockStyleFn={[Function]}
      customStyleMap={
        Object {
          "ITALIC": Object {
            "backgroundColor": "#cbe2c8",
          },
        }
      }
      editorState={
        EditorState {
          "_immutable": Object {
            "allowUndo": true,
            "currentContent": Object {
              "blockMap": Object {
                "123": Object {
                  "characterList": Array [],
                  "data": Object {},
                  "depth": 0,
                  "key": "123",
                  "text": "",
                  "type": "unstyled",
                },
              },
              "entityMap": Object {
                "__add": [Function],
                "__create": [Function],
                "__get": [Function],
                "__getLastCreatedEntityKey": [Function],
                "__mergeData": [Function],
                "__replaceData": [Function],
                "add": [Function],
                "create": [Function],
                "get": [Function],
                "getLastCreatedEntityKey": [Function],
                "mergeData": [Function],
                "replaceData": [Function],
              },
              "selectionAfter": Object {
                "anchorKey": "123",
                "anchorOffset": 0,
                "focusKey": "123",
                "focusOffset": 0,
                "hasFocus": false,
                "isBackward": false,
              },
              "selectionBefore": Object {
                "anchorKey": "123",
                "anchorOffset": 0,
                "focusKey": "123",
                "focusOffset": 0,
                "hasFocus": false,
                "isBackward": false,
              },
            },
            "decorator": null,
            "directionMap": Object {
              "123": "LTR",
            },
            "forceSelection": false,
            "inCompositionMode": false,
            "inlineStyleOverride": null,
            "lastChangeType": null,
            "nativelyRenderedContent": null,
            "redoStack": Array [],
            "selection": Object {
              "anchorKey": "123",
              "anchorOffset": 0,
              "focusKey": "123",
              "focusOffset": 0,
              "hasFocus": false,
              "isBackward": false,
            },
            "treeMap": Object {
              "123": Array [
                Object {
                  "decoratorKey": null,
                  "end": 0,
                  "leaves": Array [
                    Object {
                      "end": 0,
                      "start": 0,
                    },
                  ],
                  "start": 0,
                },
              ],
            },
            "undoStack": Array [],
          },
        }
      }
      handlePastedText={[Function]}
      handleReturn={[Function]}
      keyBindingFn={[Function]}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder=""
      readOnly={false}
      spellCheck={true}
      stripPastedStyles={false}
    />
  </div>
</RichTextEditor__Wrapper>
`;

exports[`components/RichTextEditor should render existing content 1`] = `
<RichTextEditor__Wrapper
  placeholderStyle="unordered-list-item"
  size="small"
>
  <ToolBar
    controls={Object {}}
    editorState={
      EditorState {
        "_immutable": Object {
          "allowUndo": true,
          "currentContent": Object {
            "blockMap": Object {
              "123": Object {
                "characterList": Array [
                  Object {
                    "entity": null,
                    "style": Array [
                      "ITALIC",
                    ],
                  },
                  Object {
                    "entity": null,
                    "style": Array [
                      "ITALIC",
                    ],
                  },
                  Object {
                    "entity": null,
                    "style": Array [
                      "ITALIC",
                    ],
                  },
                  Object {
                    "entity": null,
                    "style": Array [
                      "ITALIC",
                    ],
                  },
                  Object {
                    "entity": null,
                    "style": Array [
                      "ITALIC",
                    ],
                  },
                  Object {
                    "entity": null,
                    "style": Array [
                      "ITALIC",
                    ],
                  },
                  Object {
                    "entity": null,
                    "style": Array [
                      "ITALIC",
                    ],
                  },
                  Object {
                    "entity": null,
                    "style": Array [
                      "ITALIC",
                    ],
                  },
                ],
                "data": Object {},
                "depth": 0,
                "key": "123",
                "text": "Emphasis",
                "type": "unordered-list-item",
              },
            },
            "entityMap": Object {
              "__add": [Function],
              "__create": [Function],
              "__get": [Function],
              "__getLastCreatedEntityKey": [Function],
              "__mergeData": [Function],
              "__replaceData": [Function],
              "add": [Function],
              "create": [Function],
              "get": [Function],
              "getLastCreatedEntityKey": [Function],
              "mergeData": [Function],
              "replaceData": [Function],
            },
            "selectionAfter": Object {
              "anchorKey": "123",
              "anchorOffset": 0,
              "focusKey": "123",
              "focusOffset": 0,
              "hasFocus": false,
              "isBackward": false,
            },
            "selectionBefore": Object {
              "anchorKey": "123",
              "anchorOffset": 0,
              "focusKey": "123",
              "focusOffset": 0,
              "hasFocus": false,
              "isBackward": false,
            },
          },
          "decorator": null,
          "directionMap": Object {
            "123": "LTR",
          },
          "forceSelection": false,
          "inCompositionMode": false,
          "inlineStyleOverride": null,
          "lastChangeType": null,
          "nativelyRenderedContent": null,
          "redoStack": Array [],
          "selection": Object {
            "anchorKey": "123",
            "anchorOffset": 0,
            "focusKey": "123",
            "focusOffset": 0,
            "hasFocus": false,
            "isBackward": false,
          },
          "treeMap": Object {
            "123": Array [
              Object {
                "decoratorKey": null,
                "end": 8,
                "leaves": Array [
                  Object {
                    "end": 8,
                    "start": 0,
                  },
                ],
                "start": 0,
              },
            ],
          },
          "undoStack": Array [],
        },
      }
    }
    id="test"
    isActiveControl={[Function]}
    onBlur={[Function]}
    onFocus={[Function]}
    onToggle={[Function]}
    onUpdate={[Function]}
    value="
    <h2>List of styles:</h2>
    <ul>
      <li>Regular</li>
      <li><strong>Bold</strong></li>
      <li><em>Emphasis</em></li>
    </ul>
  "
    visible={false}
  />
  <div
    id="rte-click-context"
    onClick={[Function]}
  >
    <DraftEditor
      ariaLabel="I am a label"
      blockRenderMap={
        Immutable.Map {
          ordered-list-item: Object {
            "element": "li",
            "wrapper": <ol
              className="public-DraftStyleDefault-ol"
          />,
          },
          header-six: Object {
            "element": "h6",
          },
          header-four: Object {
            "element": "h4",
          },
          header-one: Object {
            "element": "h1",
          },
          unordered-list-item: Object {
            "element": "li",
            "wrapper": <ul
              className="public-DraftStyleDefault-ul"
          />,
          },
          atomic: Object {
            "element": "figure",
          },
          unstyled: Object {
            "aliasedElements": Array [
              "p",
            ],
            "element": "div",
          },
          header-two: Object {
            "element": "h2",
          },
          code-block: Object {
            "element": "pre",
            "wrapper": <pre
              className="public-DraftStyleDefault-pre"
          />,
          },
          blockquote: Object {
            "element": "blockquote",
          },
          header-five: Object {
            "element": "h5",
          },
          header-three: Object {
            "element": "h3",
          },
        }
      }
      blockRendererFn={[Function]}
      blockStyleFn={[Function]}
      customStyleMap={
        Object {
          "ITALIC": Object {
            "backgroundColor": "#cbe2c8",
          },
        }
      }
      editorState={
        EditorState {
          "_immutable": Object {
            "allowUndo": true,
            "currentContent": Object {
              "blockMap": Object {
                "123": Object {
                  "characterList": Array [
                    Object {
                      "entity": null,
                      "style": Array [
                        "ITALIC",
                      ],
                    },
                    Object {
                      "entity": null,
                      "style": Array [
                        "ITALIC",
                      ],
                    },
                    Object {
                      "entity": null,
                      "style": Array [
                        "ITALIC",
                      ],
                    },
                    Object {
                      "entity": null,
                      "style": Array [
                        "ITALIC",
                      ],
                    },
                    Object {
                      "entity": null,
                      "style": Array [
                        "ITALIC",
                      ],
                    },
                    Object {
                      "entity": null,
                      "style": Array [
                        "ITALIC",
                      ],
                    },
                    Object {
                      "entity": null,
                      "style": Array [
                        "ITALIC",
                      ],
                    },
                    Object {
                      "entity": null,
                      "style": Array [
                        "ITALIC",
                      ],
                    },
                  ],
                  "data": Object {},
                  "depth": 0,
                  "key": "123",
                  "text": "Emphasis",
                  "type": "unordered-list-item",
                },
              },
              "entityMap": Object {
                "__add": [Function],
                "__create": [Function],
                "__get": [Function],
                "__getLastCreatedEntityKey": [Function],
                "__mergeData": [Function],
                "__replaceData": [Function],
                "add": [Function],
                "create": [Function],
                "get": [Function],
                "getLastCreatedEntityKey": [Function],
                "mergeData": [Function],
                "replaceData": [Function],
              },
              "selectionAfter": Object {
                "anchorKey": "123",
                "anchorOffset": 0,
                "focusKey": "123",
                "focusOffset": 0,
                "hasFocus": false,
                "isBackward": false,
              },
              "selectionBefore": Object {
                "anchorKey": "123",
                "anchorOffset": 0,
                "focusKey": "123",
                "focusOffset": 0,
                "hasFocus": false,
                "isBackward": false,
              },
            },
            "decorator": null,
            "directionMap": Object {
              "123": "LTR",
            },
            "forceSelection": false,
            "inCompositionMode": false,
            "inlineStyleOverride": null,
            "lastChangeType": null,
            "nativelyRenderedContent": null,
            "redoStack": Array [],
            "selection": Object {
              "anchorKey": "123",
              "anchorOffset": 0,
              "focusKey": "123",
              "focusOffset": 0,
              "hasFocus": false,
              "isBackward": false,
            },
            "treeMap": Object {
              "123": Array [
                Object {
                  "decoratorKey": null,
                  "end": 8,
                  "leaves": Array [
                    Object {
                      "end": 8,
                      "start": 0,
                    },
                  ],
                  "start": 0,
                },
              ],
            },
            "undoStack": Array [],
          },
        }
      }
      handlePastedText={[Function]}
      handleReturn={[Function]}
      keyBindingFn={[Function]}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder=""
      readOnly={false}
      spellCheck={true}
      stripPastedStyles={false}
    />
  </div>
</RichTextEditor__Wrapper>
`;
