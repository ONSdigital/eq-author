// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PipingMenu should filter out checkbox answer types 1`] = `
Object {
  "sections": Array [
    Object {
      "id": "1",
      "pages": Array [
        Object {
          "answers": Array [
            Object {
              "id": "2",
              "label": "Answer 2",
              "type": "TextField",
            },
          ],
          "id": "1",
        },
      ],
    },
  ],
}
`;

exports[`PipingMenu should filter out radio answer types 1`] = `
Object {
  "sections": Array [
    Object {
      "id": "1",
      "pages": Array [
        Object {
          "answers": Array [
            Object {
              "id": "2",
              "label": "Answer 2",
              "type": "TextField",
            },
          ],
          "id": "1",
        },
      ],
    },
  ],
}
`;

exports[`PipingMenu should only allow selection of answers before the current page 1`] = `
Object {
  "sections": Array [
    Object {
      "id": "1",
      "pages": Array [
        Object {
          "answers": Array [
            Object {
              "id": "1",
              "label": "Answer 1",
              "type": "TextField",
            },
            Object {
              "id": "2",
              "label": "Answer 2",
              "type": "TextField",
            },
          ],
          "id": "1",
        },
        Object {
          "answers": Array [
            Object {
              "id": "3",
              "label": "Answer 3",
              "type": "TextField",
            },
          ],
          "id": "2",
        },
      ],
    },
    Object {
      "id": "2",
      "pages": Array [
        Object {
          "answers": Array [
            Object {
              "id": "4",
              "label": "Answer 4",
              "type": "TextField",
            },
            Object {
              "id": "5",
              "label": "Answer 5",
              "type": "TextField",
            },
          ],
          "id": "3",
        },
      ],
    },
  ],
}
`;

exports[`PipingMenu should render 1`] = `
<React.Fragment>
  <PipingMenu__MenuButton
    data-test="piping-button"
    disabled={false}
    onClick={[Function]}
    title="Pipe value"
  />
  <ContentPickerModal
    data={
      Array [
        Object {
          "id": "1",
          "pages": Array [
            Object {
              "answers": Array [
                Object {
                  "id": "1",
                  "label": "Answer 1",
                  "type": "TextField",
                },
                Object {
                  "id": "2",
                  "label": "Answer 2",
                  "type": "TextField",
                },
              ],
              "id": "1",
            },
          ],
        },
      ]
    }
    data-test="picker"
    isOpen={false}
    onClose={[Function]}
    onSubmit={[Function]}
  />
</React.Fragment>
`;

exports[`PipingMenu should render as disabled when disabled 1`] = `
<PipingMenu__MenuButton
  disabled={true}
  title="Pipe value"
/>
`;

exports[`PipingMenu should render as disabled when loading 1`] = `
<PipingMenu__MenuButton
  disabled={true}
  title="Pipe value"
/>
`;

exports[`PipingMenu should render as disabled when no questionnaire 1`] = `
<React.Fragment>
  <PipingMenu__MenuButton
    data-test="piping-button"
    disabled={true}
    onClick={[Function]}
    title="Pipe value"
  />
  <ContentPickerModal
    data={Array []}
    data-test="picker"
    isOpen={false}
    onClose={[Function]}
    onSubmit={[Function]}
  />
</React.Fragment>
`;

exports[`PipingMenu shouldn't show current section if on first page of section 1`] = `
Object {
  "sections": Array [
    Object {
      "id": "1",
      "pages": Array [
        Object {
          "answers": Array [
            Object {
              "id": "1",
              "label": "Answer 1",
              "type": "TextField",
            },
            Object {
              "id": "2",
              "label": "Answer 2",
              "type": "TextField",
            },
          ],
          "id": "1",
        },
        Object {
          "answers": Array [
            Object {
              "id": "3",
              "label": "Answer 3",
              "type": "TextField",
            },
          ],
          "id": "2",
        },
      ],
    },
  ],
}
`;
