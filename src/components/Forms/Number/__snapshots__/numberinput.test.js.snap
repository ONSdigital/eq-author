// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/Forms/Input Number should render correctly 1`] = `
.c2 {
  font-size: 1em;
  border: 1px solid #999999;
  padding: 0.5em;
  color: #333333;
  display: block;
  width: 100%;
  -webkit-transition: outline-color 100ms ease-in,border-color 100ms ease-in;
  transition: outline-color 100ms ease-in,border-color 100ms ease-in;
  outline: 1px solid transparent;
}

.c2:hover {
  border-color: #3B7A9E;
  outline-color: #3B7A9E;
}

.c2:focus,
.c2:focus-within {
  border-color: #3B7A9E;
  outline-color: #3B7A9E;
  box-shadow: 0 0 0 3px #FDBD56;
}

.c2::-webkit-input-placeholder {
  color: #a3a3a3;
}

.c2::-moz-placeholder {
  color: #a3a3a3;
}

.c2:-ms-input-placeholder {
  color: #a3a3a3;
}

.c2::placeholder {
  color: #a3a3a3;
}

.c2:focus {
  outline: none;
  border: 1px solid #3B7A9E;
}

.c2[disabled] {
  opacity: 0.8;
  pointer-events: none;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c1 {
  width: 4em;
}

.c1[type="number"]::-webkit-inner-spin-button,
.c1[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  margin: 0;
}

.c1[type="number"] {
  -webkit-appearance: textfield;
  -moz-appearance: textfield;
  appearance: textfield;
}

<Number
  id="number"
  max={10}
  min={-10}
  onChange={[Function]}
  step={1}
  value={0}
>
  <Number__StyledDiv>
    <div
      className="c0"
    >
      <Number__StyledInput
        aria-live="assertive"
        id="number"
        max={10}
        min={-10}
        onChange={[Function]}
        role="alert"
        step={1}
        type="number"
        value={0}
      >
        <withChangeHandler(UncontrolledInput)
          aria-live="assertive"
          className="c1"
          id="number"
          max={10}
          min={-10}
          onChange={[Function]}
          role="alert"
          step={1}
          type="number"
          value={0}
        >
          <UncontrolledInput
            aria-live="assertive"
            className="c1"
            id="number"
            max={10}
            min={-10}
            onChange={[Function]}
            role="alert"
            step={1}
            type="number"
            value={0}
          >
            <Input__StyledInput
              aria-live="assertive"
              className="c1"
              id="number"
              max={10}
              min={-10}
              name="number"
              onChange={[Function]}
              role="alert"
              step={1}
              type="number"
              value={0}
            >
              <input
                aria-live="assertive"
                className="c1 c2"
                id="number"
                max={10}
                min={-10}
                name="number"
                onChange={[Function]}
                role="alert"
                step={1}
                type="number"
                value={0}
              />
            </Input__StyledInput>
          </UncontrolledInput>
        </withChangeHandler(UncontrolledInput)>
      </Number__StyledInput>
    </div>
  </Number__StyledDiv>
</Number>
`;
