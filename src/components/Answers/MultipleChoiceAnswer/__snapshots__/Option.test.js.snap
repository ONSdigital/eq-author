// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Option should match snapshot 1`] = `
<Option__StyledOption
  duration={200}
  key="1"
>
  <Option__LabelField>
    <Option__DummyInput
      type="Radio"
    />
    <Option__SeamlessLabel
      data-autofocus={true}
      data-test="option-label"
      name="label"
      onBlur={[Function]}
      onChange={[Function]}
      placeholder="Label"
      size="medium"
      value=""
    />
  </Option__LabelField>
  <Field>
    <withChangeHandler(WrappingTextArea)
      data-test="option-description"
      name="description"
      onBlur={[Function]}
      onChange={[Function]}
      placeholder="Optional description"
      value=""
    />
  </Field>
  <Option__DeleteContainer>
    <Tooltip
      content="Delete option"
    >
      <DeleteButton
        aria-label="Delete option"
        data-test="btn-delete-option"
        onClick={[Function]}
        size="small"
        type="button"
      />
    </Tooltip>
  </Option__DeleteContainer>
</Option__StyledOption>
`;

exports[`Option should render a checkbox 1`] = `
.c5 {
  resize: none;
  border: none;
  padding: 0;
  color: #35414D;
  display: block;
  width: 100%;
  font-size: 1.125em;
  font-weight: 700;
  -webkit-transition: outline-color 100ms ease-in;
  transition: outline-color 100ms ease-in;
  outline: 1px solid transparent;
  outline-offset: 0.25rem;
}

.c5:hover {
  outline-color: rgba(0,138,210,0.5);
}

.c5:focus {
  outline-color: #008AD2;
}

.c5::-webkit-input-placeholder {
  color: #a3a3a3;
}

.c5::-moz-placeholder {
  color: #a3a3a3;
}

.c5:-ms-input-placeholder {
  color: #a3a3a3;
}

.c5::placeholder {
  color: #a3a3a3;
}

.c6 {
  resize: none;
  border: none;
  padding: 0;
  color: #35414D;
  display: block;
  width: 100%;
  font-size: 0.875em;
  -webkit-transition: outline-color 100ms ease-in;
  transition: outline-color 100ms ease-in;
  outline: 1px solid transparent;
  outline-offset: 0.25rem;
}

.c6:hover {
  outline-color: rgba(0,138,210,0.5);
}

.c6:focus {
  outline-color: #008AD2;
}

.c6::-webkit-input-placeholder {
  color: #a3a3a3;
}

.c6::-moz-placeholder {
  color: #a3a3a3;
}

.c6:-ms-input-placeholder {
  color: #a3a3a3;
}

.c6::placeholder {
  color: #a3a3a3;
}

.c2 {
  display: block;
  width: 100%;
  margin-bottom: 1em;
  position: relative;
}

.c8 {
  color: #c3c3c3;
  border: none;
  background: transparent;
  cursor: pointer;
  -webkit-transition: color 0.2s ease-in;
  transition: color 0.2s ease-in;
  font-size: 1.25em;
  padding: 0 auto;
}

.c8:hover {
  color: #35414D;
  -webkit-transition: color 0.2s ease-out;
  transition: color 0.2s ease-out;
}

.c9 {
  background-color: rgba(97,97,97,0.9) !important;
  font-size: 0.625rem !important;
  line-height: 2.2em !important;
  padding: 0 0.6em !important;
  border-radius: 2px !important;
  white-space: pre;
}

.c9::before,
.c9::after {
  border-bottom: none !important;
  border-top: none !important;
}

.c7 {
  padding: 0.2em;
  position: absolute;
  top: 0.5em;
  right: 1em;
}

.c3 {
  border: 2px solid #EAEAEA;
  height: 1.4em;
  width: 1.4em;
  display: inline-block;
  margin: 0 1em 0 0;
  vertical-align: top;
  border-radius: 3px;
}

.c0 {
  border: 1px solid #EAEAEA;
  padding: 1em 1em 0;
  border-radius: 3px;
  position: relative;
}

.c0:not(:first-child) {
  margin-top: 0.5em;
}

.c0.option-enter {
  opacity: 0;
  height: 0;
  -webkit-transform: translateX(-20px);
  -ms-transform: translateX(-20px);
  transform: translateX(-20px);
}

.c0.option-enter-active {
  -webkit-transition: height 100ms ease-out,opacity 100ms ease-out 100ms,-webkit-transform 100ms ease-out 100ms;
  -webkit-transition: height 100ms ease-out,opacity 100ms ease-out 100ms,transform 100ms ease-out 100ms;
  transition: height 100ms ease-out,opacity 100ms ease-out 100ms,transform 100ms ease-out 100ms;
  opacity: 1;
  height: 5.625em;
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.c0.option-exit {
  opacity: 1;
  height: 5.625em;
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.c0.option-exit-active {
  -webkit-transition: opacity 100ms ease-out,-webkit-transform 100ms ease-out,height 100ms ease-out 100ms;
  -webkit-transition: opacity 100ms ease-out,transform 100ms ease-out,height 100ms ease-out 100ms;
  transition: opacity 100ms ease-out,transform 100ms ease-out,height 100ms ease-out 100ms;
  opacity: 0;
  height: 0;
  -webkit-transform: translateX(-20px);
  -ms-transform: translateX(-20px);
  transform: translateX(-20px);
}

.c4 {
  display: inline-block !important;
  width: auto;
  vertical-align: middle;
  margin-right: 1.5em;
  -webkit-flex: 1 1 0%;
  -ms-flex: 1 1 0%;
  flex: 1 1 0%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<StatelessOption
  hasDeleteButton={true}
  onChange={[Function]}
  onDelete={[Function]}
  onFocus={[Function]}
  onUpdate={[Function]}
  option={
    Object {
      "description": "",
      "id": "1",
      "label": "",
    }
  }
  type="Checkbox"
>
  <Option__StyledOption
    duration={200}
    key="1"
  >
    <div
      className="c0"
    >
      <Option__LabelField>
        <Field
          className="c1"
        >
          <Field__StyledField
            className="c1"
          >
            <div
              className="c1 c2"
            >
              <Option__DummyInput
                key=".0"
                type="Checkbox"
              >
                <div
                  className="c3"
                  type="Checkbox"
                />
              </Option__DummyInput>
              <Option__SeamlessLabel
                data-autofocus={true}
                data-test="option-label"
                key=".1"
                name="label"
                onBlur={[Function]}
                onChange={[Function]}
                placeholder="Label"
                size="medium"
                value=""
              >
                <withChangeHandler(WrappingTextArea)
                  className="c4"
                  data-autofocus={true}
                  data-test="option-label"
                  name="label"
                  onBlur={[Function]}
                  onChange={[Function]}
                  placeholder="Label"
                  size="medium"
                  value=""
                >
                  <WrappingTextArea
                    className="c4"
                    data-autofocus={true}
                    data-test="option-label"
                    name="label"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Label"
                    size="medium"
                    value=""
                  >
                    <WrappingInput__TextArea
                      className="c4"
                      data-autofocus={true}
                      data-test="option-label"
                      name="label"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onKeyDown={[Function]}
                      placeholder="Label"
                      size="medium"
                      value=""
                    >
                      <TextareaAutosize
                        className="c4 c5"
                        data-autofocus={true}
                        data-test="option-label"
                        name="label"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onHeightChange={[Function]}
                        onKeyDown={[Function]}
                        placeholder="Label"
                        size="medium"
                        useCacheForDOMMeasurements={false}
                        value=""
                      >
                        <textarea
                          className="c4 c5"
                          data-autofocus={true}
                          data-test="option-label"
                          name="label"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onKeyDown={[Function]}
                          placeholder="Label"
                          size="medium"
                          style={
                            Object {
                              "height": 0,
                            }
                          }
                          value=""
                        />
                      </TextareaAutosize>
                    </WrappingInput__TextArea>
                  </WrappingTextArea>
                </withChangeHandler(WrappingTextArea)>
              </Option__SeamlessLabel>
            </div>
          </Field__StyledField>
        </Field>
      </Option__LabelField>
      <Field>
        <Field__StyledField>
          <div
            className="c2"
          >
            <withChangeHandler(WrappingTextArea)
              data-test="option-description"
              key=".0"
              name="description"
              onBlur={[Function]}
              onChange={[Function]}
              placeholder="Optional description"
              value=""
            >
              <WrappingTextArea
                data-test="option-description"
                name="description"
                onBlur={[Function]}
                onChange={[Function]}
                placeholder="Optional description"
                size="small"
                value=""
              >
                <WrappingInput__TextArea
                  data-test="option-description"
                  name="description"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onKeyDown={[Function]}
                  placeholder="Optional description"
                  size="small"
                  value=""
                >
                  <TextareaAutosize
                    className="c6"
                    data-test="option-description"
                    name="description"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onHeightChange={[Function]}
                    onKeyDown={[Function]}
                    placeholder="Optional description"
                    size="small"
                    useCacheForDOMMeasurements={false}
                    value=""
                  >
                    <textarea
                      className="c6"
                      data-test="option-description"
                      name="description"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onKeyDown={[Function]}
                      placeholder="Optional description"
                      size="small"
                      style={
                        Object {
                          "height": 0,
                        }
                      }
                      value=""
                    />
                  </TextareaAutosize>
                </WrappingInput__TextArea>
              </WrappingTextArea>
            </withChangeHandler(WrappingTextArea)>
          </div>
        </Field__StyledField>
      </Field>
      <Option__DeleteContainer>
        <div
          className="c7"
        >
          <Tooltip
            content="Delete option"
          >
            <div>
              <DeleteButton
                aria-label="Delete option"
                data-for="tooltip-1"
                data-test="btn-delete-option"
                data-tip={true}
                onClick={[Function]}
                size="small"
                type="button"
              >
                <DeleteButton__StyledDeleteButton
                  aria-label="Delete option"
                  data-for="tooltip-1"
                  data-test="btn-delete-option"
                  data-tip={true}
                  onClick={[Function]}
                  size="small"
                  type="button"
                >
                  <button
                    aria-label="Delete option"
                    className="c8"
                    data-for="tooltip-1"
                    data-test="btn-delete-option"
                    data-tip={true}
                    onClick={[Function]}
                    size="small"
                    type="button"
                  >
                    ×
                  </button>
                </DeleteButton__StyledDeleteButton>
              </DeleteButton>
              <Tooltip__StyledTooltip
                delayShow={200}
                effect="solid"
                id="tooltip-1"
                place="bottom"
              >
                <ReactTooltip
                  className="c9"
                  delayShow={200}
                  effect="solid"
                  id="tooltip-1"
                  insecure={true}
                  place="bottom"
                  resizeHide={true}
                  wrapper="div"
                >
                  <div
                    className="__react_component_tooltip place-top type-dark "
                    data-id="tooltip"
                  />
                </ReactTooltip>
              </Tooltip__StyledTooltip>
            </div>
          </Tooltip>
        </div>
      </Option__DeleteContainer>
    </div>
  </Option__StyledOption>
</StatelessOption>
`;

exports[`Option shouldn't render delete button if not applicable 1`] = `
<Option__StyledOption
  duration={200}
  key="1"
>
  <Option__LabelField>
    <Option__DummyInput
      type="Radio"
    />
    <Option__SeamlessLabel
      data-autofocus={true}
      data-test="option-label"
      name="label"
      onBlur={[Function]}
      onChange={[Function]}
      placeholder="Label"
      size="medium"
      value=""
    />
  </Option__LabelField>
  <Field>
    <withChangeHandler(WrappingTextArea)
      data-test="option-description"
      name="description"
      onBlur={[Function]}
      onChange={[Function]}
      placeholder="Optional description"
      value=""
    />
  </Field>
</Option__StyledOption>
`;
