// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`QuestionnaireNav should render 1`] = `
.c8 {
  color: #4A4A4A;
  border: none;
  background: transparent;
  font-size: 1.25em;
  padding: 0.125em 0.625em 0.125em 0.375em;
  position: absolute;
  right: 0;
  z-index: 3;
  cursor: pointer;
  -webkit-transform: translateX(50%);
  -ms-transform: translateX(50%);
  transform: translateX(50%);
  opacity: 0;
  -webkit-transition: -webkit-transform 0.1s ease-in,opacity 0.1s ease-in;
  -webkit-transition: transform 0.1s ease-in,opacity 0.1s ease-in;
  transition: transform 0.1s ease-in,opacity 0.1s ease-in;
}

.c9 {
  background-color: rgba(97,97,97,0.9) !important;
  font-size: 0.625rem !important;
  line-height: 2.2em !important;
  padding: 0 0.6em !important;
  border-radius: 2px !important;
  white-space: pre;
}

.c9::before,
.c9::after {
  border-bottom: none !important;
  border-top: none !important;
}

.c12 {
  padding: 0;
  margin: 0;
  font-weight: 500;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  z-index: 1;
  position: relative;
}

.c12.page-enter,
.c12.page-exit.page-exit-active {
  opacity: 0;
  height: 0;
  -webkit-transform: translateX(-20px);
  -ms-transform: translateX(-20px);
  transform: translateX(-20px);
}

.c12.page-exit,
.c12.page-enter.page-enter-active {
  opacity: 1;
  height: 2em;
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.c12.page-enter-active {
  -webkit-transition: height 150ms ease-out,opacity 150ms ease-out 150ms,-webkit-transform 150ms ease-out 150ms;
  -webkit-transition: height 150ms ease-out,opacity 150ms ease-out 150ms,transform 150ms ease-out 150ms;
  transition: height 150ms ease-out,opacity 150ms ease-out 150ms,transform 150ms ease-out 150ms;
}

.c12.page-exit-active {
  -webkit-transition: opacity 150ms ease-out,-webkit-transform 150ms ease-out,height 150ms ease-out 150ms;
  -webkit-transition: opacity 150ms ease-out,transform 150ms ease-out,height 150ms ease-out 150ms;
  transition: opacity 150ms ease-out,transform 150ms ease-out,height 150ms ease-out 150ms;
}

.c14 {
  text-decoration: none;
  color: #4A4A4A;
  font-size: 0.75em;
  padding: 0.7em 2.5em 0.7em 0.9em;
  display: block;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  height: 100%;
  position: relative;
  overflow: hidden;
  -webkit-transition: opacity 100ms ease-out;
  transition: opacity 100ms ease-out;
}

.c14::before {
  opacity: 0;
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 0;
  -webkit-transition: all 200ms ease-out;
  transition: all 200ms ease-out;
  background: #EAEAEA;
  z-index: 1;
}

.c11:hover .c14::before {
  opacity: 0.5;
  width: 100%;
}

.c14.selected::before {
  opacity: 1 !important;
  width: 100%;
}

.c14[aria-disabled="true"] {
  pointer-events: none;
  opacity: 0.5;
}

.c15 {
  display: inline-block;
  width: 100%;
  position: relative;
  z-index: 2;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  opacity: 1;
}

.c10 {
  padding: 0;
  margin: 0;
  list-style: none;
}

.c16 {
  top: 0.1em;
}

.c11:hover .c16,
.c13:focus + .c16,
.c16:focus {
  opacity: 1;
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.c5 {
  text-decoration: none;
}

.c5:link,
.c5:visited {
  color: #4A4A4A;
}

.c6 {
  padding: 0.5em 2.5em 0.5em 0;
  font-size: 0.75em;
  margin: 0;
  font-weight: 900;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  width: 100%;
  display: inline-block;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.c6:before {
  content: url(icon-section.svg);
  margin-right: 0.5em;
}

.c17 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  background: none;
  border: none;
  padding: 1em;
  color: #4A4A4A;
}

.c17:hover {
  color: black;
}

.c7 {
  top: 0.5em;
}

.c4:hover .c7,
.c4:focus + .c7,
.c7:focus {
  opacity: 1;
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.c3 {
  margin: 0;
  padding: 0.5em 0;
  position: relative;
}

.c3:not(:last-child) {
  border-bottom: 1px solid #c3c3c3;
}

.c3.section-enter {
  opacity: 0;
  -webkit-transform: translateX(-20px);
  -ms-transform: translateX(-20px);
  transform: translateX(-20px);
}

.c3.section-enter-active {
  opacity: 1;
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
  -webkit-transition: opacity 200ms ease-out,-webkit-transform 200ms ease-out;
  -webkit-transition: opacity 200ms ease-out,transform 200ms ease-out;
  transition: opacity 200ms ease-out,transform 200ms ease-out;
}

.c3.section-exit {
  opacity: 1;
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.c3.section-exit-active {
  opacity: 0;
  -webkit-transform: translateX(-20px);
  -ms-transform: translateX(-20px);
  transform: translateX(-20px);
  height: 0 !important;
  -webkit-transition: opacity 100ms ease-out,-webkit-transform 100ms ease-out,height 100ms ease-in 100ms;
  -webkit-transition: opacity 100ms ease-out,transform 100ms ease-out,height 100ms ease-in 100ms;
  transition: opacity 100ms ease-out,transform 100ms ease-out,height 100ms ease-in 100ms;
}

.c2 {
  margin: 0;
  padding: 0;
  list-style: none;
}

.c0 {
  padding: 1em;
  margin: 0;
}

.c1 {
  font-size: 0.6em;
  text-transform: uppercase;
  font-weight: 900;
  margin: 0;
  line-height: 1.5;
  position: relative;
}

.c18 {
  border-top: 1px solid #c3c3c3;
  padding: 1em 0;
  position: sticky;
  z-index: 99999;
  bottom: 0;
  left: 0;
  background: #f5f5f5;
}

.c19 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  background: none;
  border: none;
  padding: 0;
  color: #4A4A4A;
  font-weight: 600;
  font-size: 0.75em;
}

.c19::before {
  vertical-align: middle;
  display: inline-block;
  content: url(icon-plus.svg);
  margin-right: 0.6em;
}

.c19:hover {
  color: black;
}

<QuestionnaireNav
  onAddPage={[Function]}
  onAddSection={[Function]}
  onDeletePage={[Function]}
  onDeleteSection={[Function]}
  questionnaire={
    Object {
      "id": "1",
      "sections": Array [
        Object {
          "id": "3",
          "pages": Array [
            Object {
              "id": "2",
              "title": "Page",
            },
          ],
          "title": "Section",
        },
      ],
      "title": "Questionnaire",
    }
  }
>
  <QuestionnaireNav__Container
    id="questionnaire-nav"
  >
    <div
      className="c0"
      id="questionnaire-nav"
    >
      <QuestionnaireNav__Title>
        <h2
          className="c1"
        >
          Questionnaire structure
        </h2>
      </QuestionnaireNav__Title>
      <SectionNav
        onAddPage={[Function]}
        onDeletePage={[Function]}
        onDeleteSection={[Function]}
        questionnaire={
          Object {
            "id": "1",
            "sections": Array [
              Object {
                "id": "3",
                "pages": Array [
                  Object {
                    "id": "2",
                    "title": "Page",
                  },
                ],
                "title": "Section",
              },
            ],
            "title": "Questionnaire",
          }
        }
        transitionDuration={200}
      >
        <TransitionGroup
          childFactory={[Function]}
          component={[Function]}
        >
          <SectionNav__NavList>
            <ol
              className="c2"
            >
              <CSSTransition
                classNames="section"
                in={true}
                onExited={[Function]}
                timeout={200}
              >
                <Transition
                  appear={false}
                  enter={true}
                  exit={true}
                  in={true}
                  mountOnEnter={false}
                  onEnter={[Function]}
                  onEntered={[Function]}
                  onEntering={[Function]}
                  onExit={[Function]}
                  onExited={[Function]}
                  onExiting={[Function]}
                  timeout={200}
                  unmountOnExit={false}
                >
                  <SectionNavItem
                    duration={200}
                    onAddPage={[Function]}
                    onDeletePage={[Function]}
                    onDeleteSection={[Function]}
                    questionnaire={
                      Object {
                        "id": "1",
                        "sections": Array [
                          Object {
                            "id": "3",
                            "pages": Array [
                              Object {
                                "id": "2",
                                "title": "Page",
                              },
                            ],
                            "title": "Section",
                          },
                        ],
                        "title": "Questionnaire",
                      }
                    }
                    saveSectionItemRef={[Function]}
                    section={
                      Object {
                        "id": "3",
                        "number": 1,
                        "pages": Array [
                          Object {
                            "id": "2",
                            "title": "Page",
                          },
                        ],
                        "title": "Section",
                      }
                    }
                  >
                    <SectionNavItem__StyledSectionNavItem
                      duration={200}
                      innerRef={[Function]}
                      style={Object {}}
                    >
                      <li
                        className="c3"
                        style={Object {}}
                      >
                        <div
                          className="c4"
                        >
                          <SectionTitle
                            questionnaire={
                              Object {
                                "id": "1",
                                "sections": Array [
                                  Object {
                                    "id": "3",
                                    "pages": Array [
                                      Object {
                                        "id": "2",
                                        "title": "Page",
                                      },
                                    ],
                                    "title": "Section",
                                  },
                                ],
                                "title": "Questionnaire",
                              }
                            }
                            section={
                              Object {
                                "id": "3",
                                "number": 1,
                                "pages": Array [
                                  Object {
                                    "id": "2",
                                    "title": "Page",
                                  },
                                ],
                                "title": "Section",
                              }
                            }
                          >
                            <SectionTitle__Link
                              activeClassName="selected"
                              to="/questionnaire/1/design/3/2"
                            >
                              <NavLink
                                activeClassName="selected"
                                className="c5"
                                to="/questionnaire/1/design/3/2"
                              >
                                <Route
                                  path="/questionnaire/1/design/3/2"
                                >
                                  <Link
                                    className="c5"
                                    replace={false}
                                    to="/questionnaire/1/design/3/2"
                                  >
                                    <a
                                      className="c5"
                                      href="/questionnaire/1/design/3/2"
                                      onClick={[Function]}
                                    >
                                      <SectionTitle__Title>
                                        <h3
                                          className="c6"
                                        >
                                          Section
                                        </h3>
                                      </SectionTitle__Title>
                                    </a>
                                  </Link>
                                </Route>
                              </NavLink>
                            </SectionTitle__Link>
                          </SectionTitle>
                          <Tooltip
                            content="Delete section"
                            offset={
                              Object {
                                "right": -5,
                              }
                            }
                          >
                            <div>
                              <SectionNavItem__SectionDeleteButton
                                aria-label="Delete section"
                                data-for="tooltip-1"
                                data-tip={true}
                                onClick={[Function]}
                                type="button"
                              >
                                <HoverDeleteButton__HoverDeleteButton
                                  aria-label="Delete section"
                                  className="c7"
                                  data-for="tooltip-1"
                                  data-tip={true}
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <button
                                    aria-label="Delete section"
                                    className="c7 c8"
                                    data-for="tooltip-1"
                                    data-tip={true}
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    ×
                                  </button>
                                </HoverDeleteButton__HoverDeleteButton>
                              </SectionNavItem__SectionDeleteButton>
                              <Tooltip__StyledTooltip
                                delayShow={200}
                                effect="solid"
                                id="tooltip-1"
                                offset={
                                  Object {
                                    "right": -5,
                                  }
                                }
                                place="bottom"
                              >
                                <ReactTooltip
                                  className="c9"
                                  delayShow={200}
                                  effect="solid"
                                  id="tooltip-1"
                                  insecure={true}
                                  offset={
                                    Object {
                                      "right": -5,
                                    }
                                  }
                                  place="bottom"
                                  resizeHide={true}
                                  wrapper="div"
                                >
                                  <div
                                    className="__react_component_tooltip place-top type-dark "
                                    data-id="tooltip"
                                  />
                                </ReactTooltip>
                              </Tooltip__StyledTooltip>
                            </div>
                          </Tooltip>
                        </div>
                        <PageNav
                          onDelete={[Function]}
                          questionnaire={
                            Object {
                              "id": "1",
                              "sections": Array [
                                Object {
                                  "id": "3",
                                  "pages": Array [
                                    Object {
                                      "id": "2",
                                      "title": "Page",
                                    },
                                  ],
                                  "title": "Section",
                                },
                              ],
                              "title": "Questionnaire",
                            }
                          }
                          section={
                            Object {
                              "id": "3",
                              "number": 1,
                              "pages": Array [
                                Object {
                                  "id": "2",
                                  "title": "Page",
                                },
                              ],
                              "title": "Section",
                            }
                          }
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={[Function]}
                          >
                            <PageNav__NavList>
                              <ol
                                className="c10"
                              >
                                <CSSTransition
                                  classNames="page"
                                  in={true}
                                  onExited={[Function]}
                                  timeout={300}
                                >
                                  <Transition
                                    appear={false}
                                    enter={true}
                                    exit={true}
                                    in={true}
                                    mountOnEnter={false}
                                    onEnter={[Function]}
                                    onEntered={[Function]}
                                    onEntering={[Function]}
                                    onExit={[Function]}
                                    onExited={[Function]}
                                    onExiting={[Function]}
                                    timeout={300}
                                    unmountOnExit={false}
                                  >
                                    <PageNavItem
                                      index={1}
                                      onDelete={[Function]}
                                      pageId="2"
                                      pageNumber="1.1"
                                      questionnaireId="1"
                                      sectionId="3"
                                      title="Page"
                                    >
                                      <PageNav__StyledPageItem
                                        index={1}
                                      >
                                        <li
                                          className="c11 c12"
                                        >
                                          <PageNav__Link
                                            activeClassName="selected"
                                            aria-disabled={false}
                                            to="/questionnaire/1/design/3/2"
                                          >
                                            <NavLink
                                              activeClassName="selected"
                                              aria-disabled={false}
                                              className="c13 c14"
                                              to="/questionnaire/1/design/3/2"
                                            >
                                              <Route
                                                path="/questionnaire/1/design/3/2"
                                              >
                                                <Link
                                                  aria-disabled={false}
                                                  className="c13 c14"
                                                  replace={false}
                                                  to="/questionnaire/1/design/3/2"
                                                >
                                                  <a
                                                    aria-disabled={false}
                                                    className="c13 c14"
                                                    href="/questionnaire/1/design/3/2"
                                                    onClick={[Function]}
                                                  >
                                                    <PageNav__LinkText
                                                      fade={false}
                                                    >
                                                      <span
                                                        className="c15"
                                                      >
                                                        1.1
                                                         
                                                        Page
                                                      </span>
                                                    </PageNav__LinkText>
                                                  </a>
                                                </Link>
                                              </Route>
                                            </NavLink>
                                          </PageNav__Link>
                                          <Tooltip
                                            content="Delete page"
                                          >
                                            <div>
                                              <PageNav__DeleteButton
                                                aria-label="Delete page"
                                                data-for="tooltip-2"
                                                data-tip={true}
                                                onClick={[Function]}
                                                type="button"
                                              >
                                                <HoverDeleteButton__HoverDeleteButton
                                                  aria-label="Delete page"
                                                  className="c16"
                                                  data-for="tooltip-2"
                                                  data-tip={true}
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  <button
                                                    aria-label="Delete page"
                                                    className="c16 c8"
                                                    data-for="tooltip-2"
                                                    data-tip={true}
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    ×
                                                  </button>
                                                </HoverDeleteButton__HoverDeleteButton>
                                              </PageNav__DeleteButton>
                                              <Tooltip__StyledTooltip
                                                delayShow={200}
                                                effect="solid"
                                                id="tooltip-2"
                                                place="bottom"
                                              >
                                                <ReactTooltip
                                                  className="c9"
                                                  delayShow={200}
                                                  effect="solid"
                                                  id="tooltip-2"
                                                  insecure={true}
                                                  place="bottom"
                                                  resizeHide={true}
                                                  wrapper="div"
                                                >
                                                  <div
                                                    className="__react_component_tooltip place-top type-dark "
                                                    data-id="tooltip"
                                                  />
                                                </ReactTooltip>
                                              </Tooltip__StyledTooltip>
                                            </div>
                                          </Tooltip>
                                        </li>
                                      </PageNav__StyledPageItem>
                                    </PageNavItem>
                                  </Transition>
                                </CSSTransition>
                              </ol>
                            </PageNav__NavList>
                          </TransitionGroup>
                        </PageNav>
                        <SectionNavItem__AddPageBtn
                          id="btn-add-page"
                          onClick={[Function]}
                        >
                          <button
                            className="c17"
                            id="btn-add-page"
                            onClick={[Function]}
                          >
                            + Add page
                          </button>
                        </SectionNavItem__AddPageBtn>
                      </li>
                    </SectionNavItem__StyledSectionNavItem>
                  </SectionNavItem>
                </Transition>
              </CSSTransition>
            </ol>
          </SectionNav__NavList>
        </TransitionGroup>
      </SectionNav>
      <QuestionnaireNav__AddSection>
        <div
          className="c18"
        >
          <QuestionnaireNav__AddSectionBtn
            onClick={[Function]}
            primary={true}
          >
            <button
              className="c19"
              onClick={[Function]}
            >
              Create new section
            </button>
          </QuestionnaireNav__AddSectionBtn>
        </div>
      </QuestionnaireNav__AddSection>
    </div>
  </QuestionnaireNav__Container>
</QuestionnaireNav>
`;
