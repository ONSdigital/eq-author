// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Answer Properties should render 1`] = `
.c0 {
  width: 100%;
  margin-bottom: 2em;
}

.c4 {
  padding: 0.7em;
  width: 100%;
  display: block;
  border-radius: 2px;
  border: 1px solid #EAEAEA;
  font-size: 0.9em;
  display: inline-block;
  width: 1.1em;
  height: 1.1em;
  padding: 0;
  margin: 0 1em 0 0;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  font-size: 1em;
}

.c4:focus {
  outline: none;
  border: 1px solid #61BDE0;
}

.c4:checked {
  background: url(icon-checkbox.svg) no-repeat center;
  background-size: 0.8em auto;
}

.c2 {
  display: block;
  font-size: 0.9em;
  margin-bottom: 0.4em;
  font-weight: 700;
  vertical-align: middle;
}

.c6 {
  padding: 0.7em;
  width: 100%;
  display: block;
  border-radius: 2px;
  border: 1px solid #EAEAEA;
  font-size: 0.9em;
  resize: none;
}

.c6:focus {
  outline: none;
  border: 1px solid #61BDE0;
}

.c5 {
  display: block;
  width: 100%;
  margin-bottom: 1em;
}

.c3 {
  border: 2px solid #EAEAEA;
  height: 1.4em;
  width: 1.4em;
  margin-right: 0;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: space-between;
  -webkit-justify-content: space-between;
  -ms-flex-pack: space-between;
  justify-content: space-between;
  width: 100%;
  margin-bottom: 1em;
}

<AnswerProperties
  answer={
    Object {
      "description": "answer-description",
      "title": "answer-title",
      "type": "TextField",
    }
  }
  loading={false}
  onBlur={[Function]}
  onChange={[Function]}
  onSubmit={[Function]}
  onUpdate={[Function]}
>
  <Form
    onSubmit={[Function]}
  >
    <Form__StyledForm
      autoComplete="off"
      method="POST"
      onSubmit={[Function]}
    >
      <form
        autoComplete="off"
        className="c0"
        method="POST"
        onSubmit={[Function]}
      >
        <AnswerProperties__FlexField
          id="answer.required"
        >
          <div
            className="c1"
            id="answer.required"
          >
            <Label>
              <Label__StyledLabel>
                <label
                  className="c2"
                >
                  Required
                </label>
              </Label__StyledLabel>
            </Label>
            <AnswerProperties__StyledCheckboxInput
              answer={
                Object {
                  "description": "answer-description",
                  "title": "answer-title",
                  "type": "TextField",
                }
              }
              loading={false}
              onBlur={[Function]}
              onChange={[Function]}
              onSubmit={[Function]}
              onUpdate={[Function]}
              type="checkbox"
            >
              <withChangeHandler(Input)
                answer={
                  Object {
                    "description": "answer-description",
                    "title": "answer-title",
                    "type": "TextField",
                  }
                }
                className="c3"
                loading={false}
                onBlur={[Function]}
                onChange={[Function]}
                onSubmit={[Function]}
                onUpdate={[Function]}
                type="checkbox"
              >
                <Input
                  answer={
                    Object {
                      "description": "answer-description",
                      "title": "answer-title",
                      "type": "TextField",
                    }
                  }
                  className="c3"
                  loading={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onSubmit={[Function]}
                  onUpdate={[Function]}
                  type="checkbox"
                >
                  <Input__StyledInput
                    answer={
                      Object {
                        "description": "answer-description",
                        "title": "answer-title",
                        "type": "TextField",
                      }
                    }
                    className="c3"
                    loading={false}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onSubmit={[Function]}
                    onUpdate={[Function]}
                    type="checkbox"
                  >
                    <input
                      className="c3 c4"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onSubmit={[Function]}
                      type="checkbox"
                    />
                  </Input__StyledInput>
                </Input>
              </withChangeHandler(Input)>
            </AnswerProperties__StyledCheckboxInput>
          </div>
        </AnswerProperties__FlexField>
        <Field
          id="answer.validation.message"
        >
          <Field__StyledField>
            <div
              className="c5"
            >
              <Label
                id="answer.validation.message"
              >
                <Label__StyledLabel
                  htmlFor="answer.validation.message"
                >
                  <label
                    className="c2"
                    htmlFor="answer.validation.message"
                  >
                    Custom validation message
                  </label>
                </Label__StyledLabel>
              </Label>
              <withChangeHandler(TextArea)
                answer={
                  Object {
                    "description": "answer-description",
                    "title": "answer-title",
                    "type": "TextField",
                  }
                }
                id="answer.validation.message"
                loading={false}
                onBlur={[Function]}
                onChange={[Function]}
                onSubmit={[Function]}
                onUpdate={[Function]}
                placeholder="Optional"
              >
                <TextArea
                  answer={
                    Object {
                      "description": "answer-description",
                      "title": "answer-title",
                      "type": "TextField",
                    }
                  }
                  id="answer.validation.message"
                  loading={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onSubmit={[Function]}
                  onUpdate={[Function]}
                  placeholder="Optional"
                  rows={10}
                >
                  <TextArea__StyledTextArea
                    answer={
                      Object {
                        "description": "answer-description",
                        "title": "answer-title",
                        "type": "TextField",
                      }
                    }
                    id="answer.validation.message"
                    loading={false}
                    name="answer.validation.message"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onSubmit={[Function]}
                    onUpdate={[Function]}
                    placeholder="Optional"
                    rows={10}
                  >
                    <textarea
                      className="c6"
                      id="answer.validation.message"
                      name="answer.validation.message"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onSubmit={[Function]}
                      placeholder="Optional"
                      rows={10}
                    />
                  </TextArea__StyledTextArea>
                </TextArea>
              </withChangeHandler(TextArea)>
            </div>
          </Field__StyledField>
        </Field>
      </form>
    </Form__StyledForm>
  </Form>
</AnswerProperties>
`;
