exports[`components/Nav should render Nav 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Nav__Grid>
    <Column__Column
        cols="3" />
    <Column__Column>
        <Nav__StyledNav>
            <Nav__StyledNavLink
                activeClassName="selected"
                to="/create">
                Questionnaire meta
            </Nav__StyledNavLink>
            <Nav__StyledNavLink
                activeClassName="selected"
                to="/design">
                Builder
            </Nav__StyledNavLink>
            <Nav__StyledNavLink
                activeClassName="selected"
                to="/routing">
                Routing
            </Nav__StyledNavLink>
        </Nav__StyledNav>
    </Column__Column>
</Nav__Grid>,
  "nodes": Array [
    <Nav__Grid>
      <Column__Column
            cols="3" />
      <Column__Column>
            <Nav__StyledNav>
                  <Nav__StyledNavLink
                        activeClassName="selected"
                        to="/create">
                        Questionnaire meta
                  </Nav__StyledNavLink>
                  <Nav__StyledNavLink
                        activeClassName="selected"
                        to="/design">
                        Builder
                  </Nav__StyledNavLink>
                  <Nav__StyledNavLink
                        activeClassName="selected"
                        to="/routing">
                        Routing
                  </Nav__StyledNavLink>
            </Nav__StyledNav>
      </Column__Column>
</Nav__Grid>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Nav />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Nav__Grid>
          <Column__Column
                    cols="3" />
          <Column__Column>
                    <Nav__StyledNav>
                              <Nav__StyledNavLink
                                        activeClassName="selected"
                                        to="/create">
                                        Questionnaire meta
                              </Nav__StyledNavLink>
                              <Nav__StyledNavLink
                                        activeClassName="selected"
                                        to="/design">
                                        Builder
                              </Nav__StyledNavLink>
                              <Nav__StyledNavLink
                                        activeClassName="selected"
                                        to="/routing">
                                        Routing
                              </Nav__StyledNavLink>
                    </Nav__StyledNav>
          </Column__Column>
</Nav__Grid>,
        "_debugID": 2,
        "_renderedOutput": <Nav__Grid>
          <Column__Column
                    cols="3" />
          <Column__Column>
                    <Nav__StyledNav>
                              <Nav__StyledNavLink
                                        activeClassName="selected"
                                        to="/create">
                                        Questionnaire meta
                              </Nav__StyledNavLink>
                              <Nav__StyledNavLink
                                        activeClassName="selected"
                                        to="/design">
                                        Builder
                              </Nav__StyledNavLink>
                              <Nav__StyledNavLink
                                        activeClassName="selected"
                                        to="/routing">
                                        Routing
                              </Nav__StyledNavLink>
                    </Nav__StyledNav>
          </Column__Column>
</Nav__Grid>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Nav />,
}
`;
