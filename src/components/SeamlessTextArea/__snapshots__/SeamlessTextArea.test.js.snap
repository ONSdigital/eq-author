// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SeamlessTextArea should render 1`] = `
.c1 {
  resize: none;
}

.c0 {
  border: none;
  padding: 0;
  color: #35414D;
  outline: none;
  display: block;
  width: 100%;
  -webkit-transition: opacity 200ms ease-out;
  transition: opacity 200ms ease-out;
  font-size: 0.875em;
}

.c0:focus {
  outline: none;
}

.c0::-webkit-input-placeholder {
  color: #a3a3a3;
}

.c0::-moz-placeholder {
  color: #a3a3a3;
}

.c0:-ms-input-placeholder {
  color: #a3a3a3;
}

.c0::placeholder {
  color: #a3a3a3;
}

<withSeamlessness(withChangeHandler(WrappingTextArea))
  id="foo"
  onChange={[Function]}
  size="small"
  value="123"
>
  <withSeamlessness__StyledSeamless
    id="foo"
    name="foo"
    onChange={[Function]}
    size="small"
    value="123"
  >
    <withChangeHandler(WrappingTextArea)
      className="c0"
      id="foo"
      name="foo"
      onChange={[Function]}
      size="small"
      value="123"
    >
      <WrappingTextArea
        className="c0"
        id="foo"
        name="foo"
        onChange={[Function]}
        size="small"
        value="123"
      >
        <SeamlessTextArea__TextArea
          className="c0"
          id="foo"
          name="foo"
          onChange={[Function]}
          onKeyDown={[Function]}
          size="small"
          value="123"
        >
          <TextareaAutosize
            className="c0 c1"
            id="foo"
            name="foo"
            onChange={[Function]}
            onHeightChange={[Function]}
            onKeyDown={[Function]}
            size="small"
            useCacheForDOMMeasurements={false}
            value="123"
          >
            <textarea
              className="c0 c1"
              id="foo"
              name="foo"
              onChange={[Function]}
              onKeyDown={[Function]}
              size="small"
              style={
                Object {
                  "height": 0,
                }
              }
              value="123"
            />
          </TextareaAutosize>
        </SeamlessTextArea__TextArea>
      </WrappingTextArea>
    </withChangeHandler(WrappingTextArea)>
  </withSeamlessness__StyledSeamless>
</withSeamlessness(withChangeHandler(WrappingTextArea))>
`;
