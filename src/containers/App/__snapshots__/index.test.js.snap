// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`containers/App Routes should render  1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 2,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <Switch>
    <Route
      component={[Function]}
      exact={true}
      path="/sign-in"
    />
    <PrivateRoute
      component={[Function]}
      exact={true}
      isSignedIn={true}
      path="/"
    />
    <RedirectRoute
      from="/questionnaire/:questionnaireId/design/:sectionId/:pageId"
      to="/questionnaire/:questionnaireId/:sectionId(\\\\d+)/:pageId(\\\\d+)/design"
    />
    <RedirectRoute
      from="/questionnaire/:questionnaireId/design/:sectionId"
      to="/questionnaire/:questionnaireId/:sectionId(\\\\d+)/design"
    />
    <PrivateRoute
      component={[Function]}
      exact={false}
      isSignedIn={true}
      path="/questionnaire/:questionnaireId/:sectionId?/:pageId?/:tab?"
    />
    <Route
      component={[Function]}
      exact={true}
      path="*"
    />
  </Switch>
</Router>
`;

exports[`containers/App should render 1`] = `
<e>
  <ApolloProvider
    client={
      Object {
        "query": [Function],
        "readQuery": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "dispatch": [Function],
          "getState": [Function],
          "subscribe": [Function],
        }
      }
    >
      <Connect(Routes)
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 2,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      />
    </Provider>
  </ApolloProvider>
</e>
`;
